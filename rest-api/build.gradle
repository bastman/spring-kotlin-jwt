buildscript {
    ext {
        // kotlin
        kotlinVersion = '1.2.30'
        kotlinLoggingVersion = '1.5.3'
        // spring
        logstashLogbackEncoderVersion='5.0'//''4.8'
        springBootVersion ='2.0.0.RELEASE'
        springGradlePluginVersion = '1.0.4.RELEASE'
        jacksonVersion = '2.9.4'
        swaggerVersion = '2.8.0'

        // misc
        funktionaleVersion='1.2'
        auth0Apiversion='1.0.0-rc.3'
        jjwtVersion='0.9.0'

        // test
        springSecurityTestVersion='5.0.1.RELEASE'

        junitGradlePluginVersion = '1.1.0'
        mockitoVersion = '2.15.0'
        kluentVersion = '1.35'
        mockkVersion = '1.7.9'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        // kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        // spring
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springGradlePluginVersion}"
        // postgres
        classpath "org.postgresql:postgresql:${postgresDriverVersion}"
        // test
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitGradlePluginVersion"

    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-noarg"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'idea'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion="1.2"
        languageVersion="1.2"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion="1.2"
        languageVersion="1.2"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    // logging
    compile "net.logstash.logback:logstash-logback-encoder:$logstashLogbackEncoderVersion"
    compile "io.github.microutils:kotlin-logging:$kotlinLoggingVersion"
    // spring
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-webflux")
    // jackson json
    compile "com.fasterxml.jackson.module:jackson-modules-java8:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    // swagger
    compile "io.springfox:springfox-swagger2:$swaggerVersion"
    compile "io.springfox:springfox-swagger-ui:$swaggerVersion"
    // jwt / auth0
    compile "com.auth0:auth0-spring-security-api:$auth0Apiversion"
    compile "io.jsonwebtoken:jjwt:$jjwtVersion"
    // goodies
    compile "org.funktionale:funktionale-all:$funktionaleVersion"


    // test dependencies

    // runtime("org.springframework.boot:spring-boot-devtools")
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude module: "junit"
    }
    testCompile "org.springframework.security:spring-security-test:$springSecurityTestVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testCompile "org.amshove.kluent:kluent:$kluentVersion"
    testCompile "io.mockk:mockk:$mockkVersion"
}

idea {

}
test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}